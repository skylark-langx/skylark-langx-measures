{"version":3,"sources":["MeasureValue.js"],"names":["define","types","objects","klass","measures","MeasureType","MeasureUnit","MeasureValue","klassName","mtype","get","this","_","set","t","auto","unit","value","percent","u","v","clone","notEqual","m","equal","toString","min","max","mid","_construct","type","props","undefined","fromNumber","n","px","fromString","s","units","map","item","concat","i","length","indexOf","parseInt","substring","fromPlain","o","fromArray","a","parse","isString","isArray","isPlainObject","isNumber"],"mappings":"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","file":"../MeasureValue.js","sourcesContent":["define([\r\n\t\"skylark-langx-types\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-klass\",\r\n\t\"./measures\",\r\n\t\"./MeasureType\",\r\n\t\"./MeasureUnit\"\r\n],function(types,objects,klass,measures,MeasureType,MeasureUnit) {\r\n\r\n\tvar MeasureValue = klass({\r\n\t\t\"klassName\"\t:\t\"MeasureValue\",\r\n\r\n\t\t\"mtype\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.mtype;\r\n\t\t\t},\r\n\t\t\tset : function(t) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t_.mtype = t;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.auto :\r\n\t\t\t\t\t\t_.unit = null;\r\n\t\t\t\t\t\t_.value = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\t\t_.unit = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"unit\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.unit;\r\n\t\t\t},\r\n\r\n\t\t\tset : function(u) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.mtype;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\t\t_.unit = u;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"value\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.value;\r\n\t\t\t},\r\n\t\t\tset : function(v) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.mtype;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\t\t_.value = v;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new MeasureValue(_.mtype,_.unit,_.value);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*Measure*/m) {\r\n\t\t\treturn !m || m.mtype != this.mtype || m.unit != this.unit || m.value != this.value;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Measure*/m){\r\n\t\t\treturn  !this.notEqual(m);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(){\r\n\t\t\tswitch (this.mtype) {\r\n\t\t\t\tcase MeasureType.auto :\r\n\t\t\t\tcase MeasureType.min :\r\n\t\t\t\tcase MeasureType.max :\r\n\t\t\t\tcase MeasureType.mid :\r\n\t\t\t\t\treturn this.mtype.toString();\r\n\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\treturn this.value + MeasureUnit[this.unit];\r\n\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\treturn this.value + \"%\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\t\r\n\t\t\r\n\t\t\"_construct\"\t: function(type,value,unit){\r\n\t\t\tvar props = {};\r\n\t\t\tif (type != undefined) {\r\n\t\t\t\tprops.mtype = type;\r\n\t\t\t}\r\n\t\t\tif (value != undefined) {\r\n\t\t\t\tprops.value = value;\r\n\t\t\t}\r\n\t\t\tif (unit != undefined) {\r\n\t\t\t\tprops.unit = unit;\r\n\t\t\t}\r\n\t\t\tthis._ = props;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tMeasureValue.fromNumber = function(n) {\r\n        return new MeasureValue(MeasureType.unit,n,MeasureUnit.px);\r\n\t};\r\n\t\r\n\tMeasureValue.fromString = function(s) {\r\n\t\tif (s==\"auto\"){\r\n\t\t\treturn MeasureValue.auto;\r\n\t\t}\r\n\r\n\t\tif (s==\"min\"){\r\n\t\t\treturn MeasureValue.min;\r\n\t\t}\r\n\r\n\t\tif (s==\"max\"){\r\n\t\t\treturn MeasureValue.max;\r\n\t\t}\r\n\r\n\t\tif (s==\"mid\"){\r\n\t\t\treturn MeasureValue.mid;\r\n\t\t}\r\n\r\n\t\tvar units = MeasureUnit.map(function(item){\r\n\t\t\t\t//return item.getText();\r\n\t\t\t\treturn item;\r\n\t\t\t}).concat(\"%\"),\r\n\t\t\ttype,\r\n\t\t\tvalue,\r\n\t\t\tunit;\r\n        for (var i = 0; i < units.length; i++) {\r\n            if (s.indexOf(units[i]) != -1) {\r\n                value = parseInt(s.substring(0, s.length - units[i].length),10);\r\n                if (units[i] == \"%\") {\r\n                \ttype = MeasureType.percent;\r\n                } else {\r\n                \ttype = MeasureType.unit;\r\n                \t//unit = MeasureUnit.fromString(units[i]);\r\n                \tunit = MeasureUnit[units[i]];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return new MeasureValue(type,value,unit);\r\n\t};\r\n\r\n\tMeasureValue.fromPlain = function(o) {\r\n\t\treturn new MeasureValue(o.mtype,o.value,o.unit);\r\n\t};\r\n\r\n\tMeasureValue.fromArray = function(a) {\r\n\t\treturn new MeasureValue(a[0],a.length>1?a[1]:\"undefined\",a.length>1?a[2]:undefined);\r\n\t};\r\n\r\n\tMeasureValue.parse = function(value) {\r\n\t\tif (value instanceof MeasureValue) {\r\n\t\t\treturn value;\r\n\t\t} else if (types.isString(value)) {\r\n            return MeasureValue.fromString(value);\r\n        } else if (types.isArray(value)) {\r\n            return MeasureValue.fromArray(value);\r\n        } else if (types.isPlainObject(value)) {\r\n            return MeasureValue.fromPlain(value);\r\n        } else if (types.isNumber(value)) {\r\n            return MeasureValue.fromNumber(value);\r\n        }\r\n     };\r\n\r\n\tMeasureValue.auto = new MeasureValue(MeasureType.auto);\r\n\tMeasureValue.mid = new MeasureValue(MeasureType.mid);\r\n\tMeasureValue.min = new MeasureValue(MeasureType.min);\r\n\tMeasureValue.max = new MeasureValue(MeasureType.max);\r\n\r\n\treturn measures.MeasureValue = MeasureValue;\r\n\t\r\n});\t\r\n"]}