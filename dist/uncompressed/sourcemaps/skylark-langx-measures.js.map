{"version":3,"sources":["skylark-langx-measures.js"],"names":[],"mappingsfile":"../skylark-langx-measures.js","sourcesContent":["define('skylark-langx-measures/measures',[\r\n    \"skylark-langx-ns\"\r\n], function(skylark) {\r\n\t\r\n\tvar measures =  {\r\n\r\n\r\n\t};\r\n\r\n\r\n\treturn skylark.attach(\"langx.measures\",measures);\r\n});\ndefine('skylark-langx-measures/MeasureType',[\r\n\t\"skylark-langx-objects\",\r\n\t\"./measures\"\r\n],function(objects,measures) {\r\n\r\n\tvar MeasureType = [\"auto\",\"inherit\",\"initial\",\"mid\",\"min\",\"max\",\"none\",\"percent\",\"unit\"];\r\n\t\r\n\tobjects.mixin(MeasureType,{\r\n\t\t\"auto\" : 0,\r\n\t\t\"inherit\" : 1,\r\n\t\t\"initial\" : 2,\r\n\t\t\"mid\" : 3,\r\n\t\t\"min\" : 4,\r\n\t\t\"max\" : 5,\r\n\t\t\"none\" : 6,\r\n\t\t\"percent\" : 7,\r\n\t\t\"unit\" : 8\r\n\t});\r\n\r\n\treturn measures.MeasureType = MeasureType;\r\n\r\n});\r\n\ndefine('skylark-langx-measures/MeasureUnit',[\r\n\t\"skylark-langx-objects\",\r\n\t\"./measures\"\r\n],function(objects,measures) {\r\n\r\n\tvar MeasureUnit = [\"em\", \"ex\", \"px\", \"pt\", \"pc\", \"cm\", \"mm\", \"in\"];\r\n\r\n\tobjects.mixin(MeasureUnit,{\r\n\t\t\"em\" : 0, \r\n\t\t\"ex\" : 1, \r\n\t\t\"px\" : 2, \r\n\t\t\"pt\" : 3, \r\n\t\t\"pc\" : 4, \r\n\t\t\"cm\" : 5, \r\n\t\t\"mm\" : 6, \r\n\t\t\"in\" : 7\r\n\t});\r\n\r\n\treturn measures.MeasureUnit = MeasureUnit;\r\n\r\n});\r\n\ndefine('skylark-langx-measures/MeasureValue',[\r\n\t\"skylark-langx-types\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-klass\",\r\n\t\"./measures\",\r\n\t\"./MeasureType\",\r\n\t\"./MeasureUnit\"\r\n],function(types,objects,klass,measures,MeasureType,MeasureUnit) {\r\n\r\n\tvar MeasureValue = klass({\r\n\t\t\"klassName\"\t:\t\"MeasureValue\",\r\n\r\n\t\t\"mtype\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.mtype;\r\n\t\t\t},\r\n\t\t\tset : function(t) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t_.mtype = t;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.auto :\r\n\t\t\t\t\t\t_.unit = null;\r\n\t\t\t\t\t\t_.value = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\t\t_.unit = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"unit\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.unit;\r\n\t\t\t},\r\n\r\n\t\t\tset : function(u) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.mtype;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\t\t_.unit = u;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"value\" : {\r\n\t\t\tget : function(){\r\n\t\t\t\treturn this._.value;\r\n\t\t\t},\r\n\t\t\tset : function(v) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.mtype;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\t\t_.value = v;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new MeasureValue(_.mtype,_.unit,_.value);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*Measure*/m) {\r\n\t\t\treturn !m || m.mtype != this.mtype || m.unit != this.unit || m.value != this.value;\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*Measure*/m){\r\n\t\t\treturn  !this.notEqual(m);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(){\r\n\t\t\tswitch (this.mtype) {\r\n\t\t\t\tcase MeasureType.auto :\r\n\t\t\t\tcase MeasureType.min :\r\n\t\t\t\tcase MeasureType.max :\r\n\t\t\t\tcase MeasureType.mid :\r\n\t\t\t\t\treturn this.mtype.toString();\r\n\t\t\t\tcase MeasureType.unit :\r\n\t\t\t\t\treturn this.value + MeasureUnit[this.unit];\r\n\t\t\t\tcase MeasureType.percent :\r\n\t\t\t\t\treturn this.value + \"%\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\t\r\n\t\t\r\n\t\t\"_construct\"\t: function(type,value,unit){\r\n\t\t\tvar props = {};\r\n\t\t\tif (type != undefined) {\r\n\t\t\t\tprops.mtype = type;\r\n\t\t\t}\r\n\t\t\tif (value != undefined) {\r\n\t\t\t\tprops.value = value;\r\n\t\t\t}\r\n\t\t\tif (unit != undefined) {\r\n\t\t\t\tprops.unit = unit;\r\n\t\t\t}\r\n\t\t\tthis._ = props;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tMeasureValue.fromNumber = function(n) {\r\n        return new MeasureValue(MeasureType.unit,n,MeasureUnit.px);\r\n\t};\r\n\t\r\n\tMeasureValue.fromString = function(s) {\r\n\t\tif (s==\"auto\"){\r\n\t\t\treturn MeasureValue.auto;\r\n\t\t}\r\n\r\n\t\tif (s==\"min\"){\r\n\t\t\treturn MeasureValue.min;\r\n\t\t}\r\n\r\n\t\tif (s==\"max\"){\r\n\t\t\treturn MeasureValue.max;\r\n\t\t}\r\n\r\n\t\tif (s==\"mid\"){\r\n\t\t\treturn MeasureValue.mid;\r\n\t\t}\r\n\r\n\t\tvar units = MeasureUnit.map(function(item){\r\n\t\t\t\t//return item.getText();\r\n\t\t\t\treturn item;\r\n\t\t\t}).concat(\"%\"),\r\n\t\t\ttype,\r\n\t\t\tvalue,\r\n\t\t\tunit;\r\n        for (var i = 0; i < units.length; i++) {\r\n            if (s.indexOf(units[i]) != -1) {\r\n                value = parseInt(s.substring(0, s.length - units[i].length),10);\r\n                if (units[i] == \"%\") {\r\n                \ttype = MeasureType.percent;\r\n                } else {\r\n                \ttype = MeasureType.unit;\r\n                \t//unit = MeasureUnit.fromString(units[i]);\r\n                \tunit = MeasureUnit[units[i]];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return new MeasureValue(type,value,unit);\r\n\t};\r\n\r\n\tMeasureValue.fromPlain = function(o) {\r\n\t\treturn new MeasureValue(o.mtype,o.value,o.unit);\r\n\t};\r\n\r\n\tMeasureValue.fromArray = function(a) {\r\n\t\treturn new MeasureValue(a[0],a.length>1?a[1]:\"undefined\",a.length>1?a[2]:undefined);\r\n\t};\r\n\r\n\tMeasureValue.parse = function(value) {\r\n\t\tif (value instanceof MeasureValue) {\r\n\t\t\treturn value;\r\n\t\t} else if (types.isString(value)) {\r\n            return MeasureValue.fromString(value);\r\n        } else if (types.isArray(value)) {\r\n            return MeasureValue.fromArray(value);\r\n        } else if (types.isPlainObject(value)) {\r\n            return MeasureValue.fromPlain(value);\r\n        } else if (types.isNumber(value)) {\r\n            return MeasureValue.fromNumber(value);\r\n        }\r\n     };\r\n\r\n\tMeasureValue.auto = new MeasureValue(MeasureType.auto);\r\n\tMeasureValue.mid = new MeasureValue(MeasureType.mid);\r\n\tMeasureValue.min = new MeasureValue(MeasureType.min);\r\n\tMeasureValue.max = new MeasureValue(MeasureType.max);\r\n\r\n\treturn measures.MeasureValue = MeasureValue;\r\n\t\r\n});\t\r\n\ndefine('skylark-langx-measures/main',[\r\n    \"./measures\",\r\n    \"./MeasureType\",\r\n    \"./MeasureUnit\",\r\n    \"./MeasureValue\"\r\n], function(measures) {\r\n\r\n\treturn measures;\r\n});\ndefine('skylark-langx-measures', ['skylark-langx-measures/main'], function (main) { return main; });\n\n"]}